p,
x = c(df$o5[i],0),
y = c(df$a5[i],0),
evaluate = TRUE,
line = list(color = "#d3d3d3", dash = "3px"),
showlegend = FALSE
)
}
d<-df[c(1:6,1),]
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
make_radar<-function(school1,school2){
HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
Rigorous_instruction<-HS_frame[,1:16]#3:16
Collaborative_Teacher<-HS_frame[,c(1,2,17:28)]
Supportive_env<-HS_frame[,c(1,2,29:49)]
Leadership<-HS_frame[,c(1,2,50:60)]
Fam_Sch_Tie<-HS_frame[,c(1,2,61:71)]
Trust<-HS_frame[,c(1,2,72:89)]
#rm(HS_frame)
options(digits=3)
rigo<-as.numeric(as.vector(Rigorous_instruction[,4]))
coll<-as.numeric(as.vector(Collaborative_Teacher[,4]))
supp<-as.numeric(as.vector(Supportive_env[,4]))
lead<-as.numeric(as.vector(Leadership[,4]))
fami<-as.numeric(as.vector(Fam_Sch_Tie[,4]))
trus<-as.numeric(as.vector(Trust[,4]))
score<-c()
for(i in 1:487){
each<-cbind(rigo[i],coll[i],supp[i],lead[i],fami[i],trus[i])
score<-cbind(score,each)
}
score<-as.vector(score)
response<-rep(c("rigorous","collaborative teacher","supportive environment","leadership","family-school tie","trust"),487)
schoolname<-Rigorous_instruction[,2]
school<-rep(schoolname,each=6)
school<-as.vector(school)
df<-as.data.frame(cbind(school,response,score))
df$score<-as.numeric(as.vector(df$score))
df$degree <- seq(0,300,60) # 6 responses, equals 60 degrees per response
df$o <- df$score/5 * sin(df$degree * pi / 180) # SOH
df$a <- df$score/5 * cos(df$degree * pi / 180) # CAH
df$o5 <- 1 * sin(df$degree * pi / 180) # Outer ring x
df$a5 <- 1 * cos(df$degree * pi / 180) # Outer ring y
df$a4 <- 0.8 * cos(df$degree * pi / 180) # 80% ring y
df$o4 <- 0.8 * sin(df$degree * pi / 180) # 80% ring x
df$o3 <- 0.6 * sin(df$degree * pi / 180) # 60% ring x
df$a3 <- 0.6 * cos(df$degree * pi / 180) # 60% ring y
df$o2 <- 0.4 * sin(df$degree * pi / 180) # 40% ring x
df$a2 <- 0.4 * cos(df$degree * pi / 180) # 40% ring y
df$o1 <- 0.2 * sin(df$degree * pi / 180) # 20% ring x
df$a1 <- 0.2 * cos(df$degree * pi / 180) # 20% ring y
p = plot_ly()
x=school1
y=school2
loc1<-which(df$school==x)[1]
loc2<-which(df$school==y)[1]
for(i in 1:6) {
p <- add_trace(
p,
x = c(df$o5[i],0),
y = c(df$a5[i],0),
evaluate = TRUE,
line = list(color = "#d3d3d3", dash = "3px"),
showlegend = FALSE
)
}
d<-df[c(1:6,1),]
dd<-df[c(loc1:(loc1+5),loc1,loc2:(loc2+5),loc2),]
p %>%
add_trace(data = dd, x = dd$o, y = dd$a, color = factor(dd$school),
mode = "lines+markers",
hoverinfo = "text",
text = paste(dd$response, dd$score)) %>%
add_trace(data = d, x = d$o5, y = d$a5,
text = d$response,
hoverinfo = "none",
textposition = "top middle", mode = "lines+text",
line = list(color = "#d3d3d3", dash = "3px", shape = "spline"),
showlegend = FALSE) %>%
add_trace(data = d, x = d$o4, y = d$a4, mode = "lines",
line = list(color = "#d3d3d3", dash = "3px", shape = "spline"),
hoverinfo = "none",
showlegend = FALSE) %>%
add_trace(data = d, x = d$o3, y = d$a3, mode = "lines",
line = list(color = "#d3d3d3", dash = "3px", shape = "spline"),
hoverinfo = "none",
showlegend = FALSE) %>%
add_trace(data = d, x = d$o2, y = d$a2, mode = "lines",
line = list(color = "#d3d3d3", dash = "3px", shape = "spline"),
hoverinfo = "none",
showlegend = FALSE) %>%
add_trace(data = d, x = d$o1, y = d$a1, mode = "lines",
line = list(color = "#d3d3d3", dash = "3px", shape = "spline"),
hoverinfo = "none",
showlegend = FALSE) %>%
layout(
autosize = FALSE,
hovermode = "closest",
autoscale = TRUE,
width = 450,
height = 450,
xaxis = list(range = c(-2,2), showticklabels = FALSE, zeroline = FALSE, showgrid = FALSE),
yaxis = list(range = c(-2,2), showticklabels = FALSE, zeroline = FALSE, showgrid = FALSE))
}
make_radar(x,y)
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/NO Dashboard')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
df=Rigorous_instruction
df<-merge(df,loc_data,by.x = "School.Name",by.y="school.name")
colnames(df)[3:7]<-c("rating","ele_score","School_per","City_per","Boro_per")
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
HS_summary<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_Summary.csv")
Rigorous_instruction<-HS_frame[,1:16]#3:16
Collaborative_Teacher<-HS_frame[,c(1,2,17:28)]
Supportive_env<-HS_frame[,c(1,2,29:49)]
Leadership<-HS_frame[,c(1,2,50:60)]
Fam_Sch_Tie<-HS_frame[,c(1,2,61:71)]
Trust<-HS_frame[,c(1,2,72:89)]
options(digits=3)
rigo<-as.numeric(as.vector(Rigorous_instruction[,4]))
coll<-as.numeric(as.vector(Collaborative_Teacher[,4]))
supp<-as.numeric(as.vector(Supportive_env[,4]))
lead<-as.numeric(as.vector(Leadership[,4]))
fami<-as.numeric(as.vector(Fam_Sch_Tie[,4]))
trus<-as.numeric(as.vector(Trust[,4]))
score<-c()
for(i in 1:487){
each<-cbind(rigo[i],coll[i],supp[i],lead[i],fami[i],trus[i])
score<-cbind(score,each)
}
score<-as.vector(score)
response<-rep(c("rigorous","collaborative teacher","supportive environment","leadership","family-school tie","trust"),487)
schoolname<-Rigorous_instruction[,2]
school<-rep(schoolname,each=6)
school<-as.vector(school)
df<-as.data.frame(cbind(school,response,score))
df$score<-as.numeric(as.vector(df$score))
df$degree <- seq(0,300,60) # 6 responses, equals 60 degrees per response
df$o <- df$score/5 * sin(df$degree * pi / 180) # SOH
df$a <- df$score/5 * cos(df$degree * pi / 180) # CAH
df$o5 <- 1 * sin(df$degree * pi / 180) # Outer ring x
df$a5 <- 1 * cos(df$degree * pi / 180) # Outer ring y
df$a4 <- 0.8 * cos(df$degree * pi / 180) # 80% ring y
df$o4 <- 0.8 * sin(df$degree * pi / 180) # 80% ring x
df$o3 <- 0.6 * sin(df$degree * pi / 180) # 60% ring x
df$a3 <- 0.6 * cos(df$degree * pi / 180) # 60% ring y
df$o2 <- 0.4 * sin(df$degree * pi / 180) # 40% ring x
df$a2 <- 0.4 * cos(df$degree * pi / 180) # 40% ring y
df$o1 <- 0.2 * sin(df$degree * pi / 180) # 20% ring x
df$a1 <- 0.2 * cos(df$degree * pi / 180) # 20% ring y
library("xlsx")
library("plotly")
library("dplyr")
col<-apply(HS_frame[1,],2,as.character)
HS_frame<-HS_frame[2:1254,]
colnames(HS_frame)<-col
HS_frame<-HS_frame%>%filter(!is.na(`School Name`))
Rigorous_instruction<-HS_frame[,1:16]#3:16
Collaborative_Teacher<-HS_frame[,c(1,2,17:28)]
View(HS_frame)
HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
HS_summary<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_Summary.csv")
#HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
Rigorous_instruction<-HS_frame[,1:16]#3:16
Collaborative_Teacher<-HS_frame[,c(1,2,17:28)]
Supportive_env<-HS_frame[,c(1,2,29:49)]
Leadership<-HS_frame[,c(1,2,50:60)]
Fam_Sch_Tie<-HS_frame[,c(1,2,61:71)]
Trust<-HS_frame[,c(1,2,72:89)]
#rm(HS_frame)
options(digits=3)
rigo<-as.numeric(as.vector(Rigorous_instruction[,4]))
coll<-as.numeric(as.vector(Collaborative_Teacher[,4]))
supp<-as.numeric(as.vector(Supportive_env[,4]))
lead<-as.numeric(as.vector(Leadership[,4]))
fami<-as.numeric(as.vector(Fam_Sch_Tie[,4]))
trus<-as.numeric(as.vector(Trust[,4]))
score<-c()
for(i in 1:487){
each<-cbind(rigo[i],coll[i],supp[i],lead[i],fami[i],trus[i])
score<-cbind(score,each)
}
score<-as.vector(score)
response<-rep(c("rigorous","collaborative teacher","supportive environment","leadership","family-school tie","trust"),487)
schoolname<-Rigorous_instruction[,2]
school<-rep(schoolname,each=6)
school<-as.vector(school)
df<-as.data.frame(cbind(school,response,score))
df$score<-as.numeric(as.vector(df$score))
df$degree <- seq(0,300,60) # 6 responses, equals 60 degrees per response
df$o <- df$score/5 * sin(df$degree * pi / 180) # SOH
df$a <- df$score/5 * cos(df$degree * pi / 180) # CAH
df$o5 <- 1 * sin(df$degree * pi / 180) # Outer ring x
df$a5 <- 1 * cos(df$degree * pi / 180) # Outer ring y
df$a4 <- 0.8 * cos(df$degree * pi / 180) # 80% ring y
df$o4 <- 0.8 * sin(df$degree * pi / 180) # 80% ring x
df$o3 <- 0.6 * sin(df$degree * pi / 180) # 60% ring x
df$a3 <- 0.6 * cos(df$degree * pi / 180) # 60% ring y
df$o2 <- 0.4 * sin(df$degree * pi / 180) # 40% ring x
df$a2 <- 0.4 * cos(df$degree * pi / 180) # 40% ring y
df$o1 <- 0.2 * sin(df$degree * pi / 180) # 20% ring x
df$a1 <- 0.2 * cos(df$degree * pi / 180) # 20% ring y
#=======
library("xlsx")
library("plotly")
library("dplyr")
Rigorous_instruction<-HS_frame[,1:16]#3:16
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
br.df<-loc_data
br.df<-br.df[,-1:-2]
br.df<-loc_data
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/radar_shiny')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/eco2121 Ranking App - ADS Proj2 Group 2.R')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/eco2121 Ranking App - ADS Proj2 Group 2.R')
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/eco2121 Ranking App - ADS Proj2 Group 2.R')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
runApp('Desktop/making_map')
data.ranked.allsurvey <- read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data.ranked.allsurvey.csv")
data.ranked.quant <- read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/data.ranked.quant.csv")
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/intro_shiny')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
shiny::runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
runApp('Desktop/making_map')
round(teacher_expr[,2])
round(teacher_expr[,2],2)
labels_all_new <- sprintf(
"<strong><font color=\"#00008b\" size=3>%s</font></strong><br/>
%s<br/>
<strong>%g</strong> students<br/>
</i> <font color=\"#8b2323\"><i class=\"fa fa-users\"> Teachers with 3 or More Year Expr</i>: <strong>%s %%</strong></font></br>
<font color=\"#458b0\"><i class=\"fa fa-language\"> English Language Learner</i>: <strong>%s %%</strong></font></br>
<font color=\"#cd9b1d\"> <i class=\"fa fa-dollar\">  Economic Need Index</i>: <strong>%s %%</strong></font></br>
<font color=\"#104e8b\"> <i class=\"fa fa-wheelchair\"> Students with Disabilities</i>: <strong>%s %%</strong></font></br>
",
df_select2()$school.name,
as.character(df_select2()$addr),
df_select2()$Enrollment,
#icon("users"),
round(teacher_expr[,2],2)*100,
#icon("language"),
round(language_learner[,2],2)*100,
#icon("dollar"),
round(econ_need[,2],2)*100,
#icon("wheelchair"),
round(disability[,2],2)*100
) %>% lapply(htmltools::HTML)
labels_all_new <- sprintf(
"<strong><font color=\"#00008b\" size=3>%s</font></strong><br/>
%s<br/>
<strong>%g</strong> students<br/>
</i> <font color=\"#8b2323\"><i class=\"fa fa-users\"> Teachers with 3 or More Year Expr</i>: <strong>%s %%</strong></font></br>
<font color=\"#458b0\"><i class=\"fa fa-language\"> English Language Learner</i>: <strong>%s %%</strong></font></br>
<font color=\"#cd9b1d\"> <i class=\"fa fa-dollar\">  Economic Need Index</i>: <strong>%s %%</strong></font></br>
<font color=\"#104e8b\"> <i class=\"fa fa-wheelchair\"> Students with Disabilities</i>: <strong>%s %%</strong></font></br>
",
data_merge$school.name,
as.character(data_merge$addr),
df_select2()$Enrollment,
#icon("users"),
round(teacher_expr[,2],2)*100,
#icon("language"),
round(language_learner[,2],2)*100,
#icon("dollar"),
round(econ_need[,2],2)*100,
#icon("wheelchair"),
round(disability[,2],2)*100
) %>% lapply(htmltools::HTML)
labels_all_new <- sprintf(
"<strong><font color=\"#00008b\" size=3>%s</font></strong><br/>
%s<br/>
<strong>%g</strong> students<br/>
</i> <font color=\"#8b2323\"><i class=\"fa fa-users\"> Teachers with 3 or More Year Expr</i>: <strong>%s %%</strong></font></br>
<font color=\"#458b0\"><i class=\"fa fa-language\"> English Language Learner</i>: <strong>%s %%</strong></font></br>
<font color=\"#cd9b1d\"> <i class=\"fa fa-dollar\">  Economic Need Index</i>: <strong>%s %%</strong></font></br>
<font color=\"#104e8b\"> <i class=\"fa fa-wheelchair\"> Students with Disabilities</i>: <strong>%s %%</strong></font></br>
",
data_merge$school.name,
as.character(data_merge$addr),
data_merge()$Enrollment,
#icon("users"),
round(teacher_expr[,2],2)*100,
#icon("language"),
round(language_learner[,2],2)*100,
#icon("dollar"),
round(econ_need[,2],2)*100,
#icon("wheelchair"),
round(disability[,2],2)*100
) %>% lapply(htmltools::HTML)
labels_all_new <- sprintf(
"<strong><font color=\"#00008b\" size=3>%s</font></strong><br/>
%s<br/>
<strong>%g</strong> students<br/>
</i> <font color=\"#8b2323\"><i class=\"fa fa-users\"> Teachers with 3 or More Year Expr</i>: <strong>%s %%</strong></font></br>
<font color=\"#458b0\"><i class=\"fa fa-language\"> English Language Learner</i>: <strong>%s %%</strong></font></br>
<font color=\"#cd9b1d\"> <i class=\"fa fa-dollar\">  Economic Need Index</i>: <strong>%s %%</strong></font></br>
<font color=\"#104e8b\"> <i class=\"fa fa-wheelchair\"> Students with Disabilities</i>: <strong>%s %%</strong></font></br>
",
data_merge$school.name,
as.character(data_merge$addr),
data_merge$Enrollment,
#icon("users"),
round(teacher_expr[,2],2)*100,
#icon("language"),
round(language_learner[,2],2)*100,
#icon("dollar"),
round(econ_need[,2],2)*100,
#icon("wheelchair"),
round(disability[,2],2)*100
) %>% lapply(htmltools::HTML)
runApp('Desktop/making_map')
runApp('Desktop/making_map')
setwd('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
save.image("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/shiny_app_final_version/www/all_shiny_data.RData")
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='xinluohaha',
token='14D3AE4BA6B26E78828B8AAECA298AFD',
secret='<SECRET>')
library(rsconnect)
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/shiny_app_final_version')
library("rsconnect")
library(rsconnect)
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/shiny_app_final_version')
rsconnect::setAccountInfo(name='xinluohaha',
token='14D3AE4BA6B26E78828B8AAECA298AFD',
secret='<SECRET>')
install.packages('rsconnect')
install.packages("rsconnect")
library(rsconnect)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='xinluohaha', token='14D3AE4BA6B26E78828B8AAECA298AFD', secret='/Ft6VCPGAJz8oWcWPJ/G8OM5YG+CVs/HG0dKLfYv')
library("resconnect")
library("rsconnect")
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/shiny_app_final_version')
shiny::runApp('~/Desktop/making_map')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/doc/shiny_app_final_version')
rsconnect::deployApp('~/Desktop/making_map/')
rsconnect::deployApp('~/Desktop/making_map/')
runApp('~/Desktop/making_map')
rsconnect::deployApp('~/Desktop/making_map/')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
runApp('~/Desktop/making_map')
rsconnect::deployApp('~/Desktop/making_map/')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/app/shiny_app_final_version/')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/app/shiny_app_final_version/')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/app/shiny_app_final_version/')
rsconnect::setAccountInfo(name='xinluohaha', token='14D3AE4BA6B26E78828B8AAECA298AFD', secret='/Ft6VCPGAJz8oWcWPJ/G8OM5YG+CVs/HG0dKLfYv')
rsconnect::setAccountInfo(name='xinluohaha', token='14D3AE4BA6B26E78828B8AAECA298AFD', secret='/Ft6VCPGAJz8oWcWPJ/G8OM5YG+CVs/HG0dKLfYv')
rsconnect::deployApp('~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/app/shiny_app_final_version/')
