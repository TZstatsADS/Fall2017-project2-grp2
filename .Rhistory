<font color=\"#cd9b1d\">Supportive Environment</font>: %s<br/>
<font color=\"#68228b\">Effective School Leadership</font>: %s<br/>
<font color=\"#104e8b\">Strong Family Community Tie</font>: %s<br/>
<font color=\"#698b69\">Trust</font>: %s",
data_merge$school.name, as.character(data_merge$addr),data_merge$Enrollment,
data_merge$Rigorous.Instruction.Rating,
data_merge$Collaborative.Teachers.Rating,
data_merge$Supportive.Environment.Rating,
data_merge$Effective.School.Leadership.Rating,
data_merge$Strong.Family.Community.Ties.Rating,
data_merge$Trust.Rating
) %>% lapply(htmltools::HTML)
leaflet(data_merge)%>%
addTiles()%>%
addCircles(~lon, ~lat,popup=labels,label=~school.name,radius=~Enrollment/10)
labels <- sprintf(
"<strong><font color=\"#00008b\" size=3>%s</font></strong><br/>
%s<br/>
<strong>%g</strong> students<br/>
<font color=\"#8b2323\">Rigorous Instruction</font>: %s<br/>
<font color=\"#458b00\">Collaborative Teaching</font>: %s<br/>
<font color=\"#cd9b1d\">Supportive Environment</font>: %s<br/>
<font color=\"#68228b\">Effective School Leadership</font>: %s<br/>
<font color=\"#104e8b\">Strong Family Community Tie</font>: %s<br/>
<font color=\"#698b69\">Trust</font>: %s",
data_merge$school.name, as.character(data_merge$addr),data_merge$Enrollment,
data_merge$Rigorous.Instruction.Rating,
data_merge$Collaborative.Teachers.Rating,
data_merge$Supportive.Environment.Rating,
data_merge$Effective.School.Leadership.Rating,
data_merge$Strong.Family.Community.Ties.Rating,
data_merge$Trust.Rating
) %>% lapply(htmltools::HTML)
leaflet(data_merge)%>%
addTiles()%>%
addCircles(~lon, ~lat,popup=labels,label=~school.name,radius=~Enrollment/10)
HS<-read.xlsx("~/Desktop/2014_2015_HS_SQR_Results_2016_01_07.xlsx",
sheetName = "Additional Info",header = T)
col<-apply(HS[1,],2,as.character)
HS<-HS[-1,]
colnames(HS)<-col
SAT_HS<-HS[,c(1,2,29:36)]
write.csv(SAT_HS,"~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/SAT_HS.csv")
ACT_HS<-HS[,c(1,2,37:46)]
write.csv(ACT_HS,"~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/ACT_HS.csv")
Regents_HS<-HS[,1:28]
write.csv(Regents_HS,"~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/Regents_HS.csv")
setwd("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/")
library(shiny)
library(ggplot2)
summary(data_merge$Enrollment)
loc_data<-read.csv("~/Desktop/HS_loc.csv")
loc_data<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_loc.csv")
summary(loc_data$zipcode)
View(loc_data)
zipcode<-loc_data$addr
zipcode<-as.character(loc_data$addr)
l=zipcode[1]
x<-strsplit(l)
x<-strsplit(l,split = ",")
x<-strsplit(l,split = ",")[[1]]
x
zipcode
x<-x[length(x)-1]
x<-strsplit(x,split="")
x<-strsplit(l,split = ",")[[1]]
x<-x[length(x)-1]
x<-strsplit(x,split=" ")
x<-x[length(x)]
x<-strsplit(x,split=" ")[[1]]
x<-strsplit(l,split = ",")[[1]]
x<-x[length(x)-1]
x<-strsplit(x,split=" ")[[1]]
x<-x[length(x)]
f<-function(l){
x<-strsplit(l,split = ",")[[1]]
x<-x[length(x)-1]
x<-strsplit(x,split=" ")[[1]]
x<-x[length(x)]
return(as.integer(x))
}
y<-sapply(zipcode,f)
y
y<-as.numeric(sapply(zipcode,f))
loc_data$zipcode<-y
summary(loc_data$zipcode)
write.csv(loc_data,"~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_loc.csv")
loc_data<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_loc.csv")
View(loc_data)
unique(loc_data$zipcode)
HS_summary<-read.csv("~/Desktop/HS_Summary.csv")
data_merge<-merge(loc_data,HS_summary[,c(2,4:10)],by.x="school.name",by.y="School.Name")
View(data_merge)
library(dlpyr)
library(dplyr)
2%in%c(1,2,3)
cut(data_merge$Enrollment)
cut(data_merge$Enrollment,10)
cut(data_merge$Enrollment,5)
x<-cut(data_merge$Enrollment,10)
x
summary(data_merge$Enrollment)
runApp("~/Desktop/making_map//")
runApp("~/Desktop/making_map//")
View(loc_data)
View(data_merge)
leaflet(data_merge)%>%
addTiles()%>%
addCircles(~lon, ~lat,popup=labels,label=~school.name,radius=~Enrollment/10)
runApp("~/Desktop/making_map//")
runApp("~/Desktop/making_map//")
loc_data<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_loc.csv")
HS_summary<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_Summary.csv")
data_merge<-merge(loc_data,HS_summary[,c(2,4:10)],by.x="school.name",by.y="School.Name")
View(data_merge)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
install.packages("shinydashboard")
run
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
observeEvent()
point
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
View(data_merge)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
data_merge$zipcode%in%c(10024,10025,10026,10027)
sum(data_merge$zipcode%in%c(10024,10025,10026,10027))
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
levels(data_merge$Supportive.Environment.Rating)
span(style = sprintf(
"width:1.1em; height:1.1em; background-color:%s; display:inline-block;",
dirColors[4]
))
dirColors <-c("Approaching Target"="#595490", "Exceeding Target"="#527525", "Meeting Target"="#A93F35",
"Not Meeting Target"="#BA48AA","N/A"="#eead0e")
span(style = sprintf(
"width:1.1em; height:1.1em; background-color:%s; display:inline-block;",
dirColors[4]
))
target_df<-data_merge[5,]
target_df$Rigorous.Instruction.Rating
target_df<-as.vector(data_merge[5,])
target_df$Rigorous.Instruction.Rating[1]
dirColors[target_df$Rigorous.Instruction.Rating]
target_df<-as.vector(data_merge[1000,])
target_df<-as.vector(data_merge[8800,])
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
as.character(target_df$Rigorous.Instruction.Rating)
span(style = sprintf(
"width:1.1em; height:1.1em; background-color:%s; display:inline-block;",
dirColors[target_df$Rigorous.Instruction.Rating]
))
span(style =
"width:1.1em; height:1.1em; background-color:#8b2323; display:inline-block;")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
sprintf("Rigorous Instruction: %s<br/>%s","hahah","hahhahah")%>% lapply(htmltools::HTML)
sprintf("Rigorous Instruction: %s <br/> %s","hahah","hahhahah")%>% lapply(htmltools::HTML)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
tidyrace<-read.csv("../data/tidyrace.csv")
tidyrace<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/tidyrace.csv")
View(tidyrace)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
tidysixmonth<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/tidysix.csv")
View(tidysixmonth)
View(tidyrace)
sum(is.na(tidyrace$Number))
nrow(tidyrace)/4
sum(is.na(tidysixmonth$Number))
tidyeighteenmonth<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/tidyeighteen.csv")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
View(tidyrace)
View(tidyeighteenmonth)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
View(tidysixmonth)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
HS_frame<-read.csv("~/Desktop/[ADS]Advanced Data Science/Fall2017-project2-grp2/data/HS_frame.csv")
View(HS_frame)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
View(Rigorous_instruction)
View(Supportive_env)
View(HS_frame)
df<-HS_frame
school_name=HS_frame$School.Name[4]
HS_frame[,c(Aspects['Rigorous Instruction Rating'][[1]])]
df=HS_frame[,c(Aspects['Rigorous Instruction Rating'][[1]])]
Aspects<-list(
'Rigorous Instruction Rating'=c(1:4,8:10),
'Collaborative Teachers Rating'=c(1,2,17:18,20:22),
'Supportive Environment Rating'=c(1,2,29:30,32:34),
'Effective School Leadership Rating'=c(1,2,50:54),
'Strong Family-Community Ties Rating'=c(1,2,61:65),
'Trust Rating'=c(1,2,72:76)
)
df=HS_frame[,c(Aspects['Rigorous Instruction Rating'][[1]])]
colnames(df)[3:7]<-c("rating","ele_score","School_per","City_per","Boro_Per")
df[,4]<-as.numeric(as.vector(df[,4]))
s_i=df[df$School.Name==school_name,"ele_score"]
df<-df%>%filter(!is.na(ele_score))
h_i=round(sum(df$ele_score<s_i)/nrow(df),2)
r_i=df[df$School.Name==school_name,"rating"]
rank_i=nrow(df)-rank(df$ele_score)
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher than City Level ",round(higher_t_city*100,2),"%",collapse = ""),paste("Lower than City Level ",abs(higher_t_city)*100,"%",collapse = ""))
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
df[df$School.Name==school_name,"School_per"]
df[df$School.Name==school_name,"Boro_per"]
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher than City Level ",round(higher_t_city*100,2),"%",collapse = ""),paste("Lower than City Level ",abs(higher_t_city)*100,"%",collapse = ""))
higher_t_boro<-ifelse(higher_t_city>=0,paste("Higher than Borough Level ",round(higher_t_boro*100,2),"%",collapse = ""),paste("Lower than Borough Level ",abs(higher_t_boro)*100,"%",collapse = ""))
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_city*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_city)*100,"%",collapse = ""))
higher_t_boro<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_boro*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_boro)*100,"%",collapse = ""))
cal_values<-function(df,school_name){
colnames(df)[3:7]<-c("rating","ele_score","School_per","City_per","Boro_Per")
df[,4]<-as.numeric(as.vector(df[,4]))
s_i=df[df$School.Name==school_name,"ele_score"]
if(is.na(s_i)){
return(paste("No data for this school"))
}
df<-df%>%filter(!is.na(ele_score))
#h_i=round(sum(df$ele_score<s_i)/nrow(df),2)
#r_i=df[df$School.Name==school_name,"rating"]
#m<-mean(df$ele_score)
rank_i=nrow(df)-rank(df$ele_score)
rank_i=paste(rank_i[which(df$School.Name==school_name)],"/",nrow(df),sep = "")
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
#higher_t_city<-i
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_city*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_city)*100,"%",collapse = ""))
higher_t_boro<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_boro*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_boro)*100,"%",collapse = ""))
return(c(rank_i,higher_t_city,higher_t_boro))
}
cal_values<-function(df,school_name)
)
cal_values<-function(df,school_name){
colnames(df)[3:7]<-c("rating","ele_score","School_per","City_per","Boro_Per")
df[,4]<-as.numeric(as.vector(df[,4]))
s_i=df[df$School.Name==school_name,"ele_score"]
if(is.na(s_i)){
return(paste("No data for this school"))
}
df<-df%>%filter(!is.na(ele_score))
#h_i=round(sum(df$ele_score<s_i)/nrow(df),2)
#r_i=df[df$School.Name==school_name,"rating"]
#m<-mean(df$ele_score)
rank_i=nrow(df)-rank(df$ele_score)
rank_i=paste(rank_i[which(df$School.Name==school_name)],"/",nrow(df),sep = "")
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
#higher_t_city<-i
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_city*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_city)*100,"%",collapse = ""))
higher_t_boro<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_boro*100,2),"%",collapse = ""),paste("Lower ",abs(higher_t_boro)*100,"%",collapse = ""))
return(c(rank_i,higher_t_city,higher_t_boro))
}
cal_values(df,school_name)
cal_values<-function(df,school_name){
colnames(df)[3:7]<-c("rating","ele_score","School_per","City_per","Boro_Per")
df[,4]<-as.numeric(as.vector(df[,4]))
s_i=df[df$School.Name==school_name,"ele_score"]
if(is.na(s_i)){
return(paste("No data for this school"))
}
df<-df%>%filter(!is.na(ele_score))
#h_i=round(sum(df$ele_score<s_i)/nrow(df),2)
#r_i=df[df$School.Name==school_name,"rating"]
#m<-mean(df$ele_score)
rank_i=nrow(df)-rank(df$ele_score)
rank_i=paste(rank_i[which(df$School.Name==school_name)],"/",nrow(df),sep = "")
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
#higher_t_city<-i
higher_t_city<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_city*100,2),"%",sep = ""),paste("Lower ",abs(higher_t_city)*100,"%",sep = ""))
higher_t_boro<-ifelse(higher_t_city>=0,paste("Higher ",round(higher_t_boro*100,2),"%",sep = ""),paste("Lower ",abs(higher_t_boro)*100,"%",sep = ""))
return(c(rank_i,higher_t_city,higher_t_boro))
}
cal
cal_values(df,school_name)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
x=3/NA
higher_t_city<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"City_per"])/df[df$School.Name==school_name,"City_per"]
higher_t_boro<-(df[df$School.Name==school_name,"School_per"]-df[df$School.Name==school_name,"Boro_per"])/df[df$School.Name==school_name,"Boro_per"]
df[df$School.Name==school_name,"Boro_per"])
df[df$School.Name==school_name,"Boro_per"]
x=3/NULL
length(x)
length(3)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
View(HS_frame)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
rm(school_name)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
df[1,"Boro_per"]
df[2,"Boro_per"]
View(df)
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
order(c(1,1,13,12,41,1,33,41))
rank(c(1,1,13,12,41,1,33,41))
runApp("~/Desktop/making_map/")
runApp("~/Desktop/making_map/")
